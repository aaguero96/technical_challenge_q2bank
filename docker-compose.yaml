version: '3'

services:
  api:
    container_name: api
    build: .
    environment:
      REDIS_HOST: redis
      DB_HOST: postgres_db
    ports:
      - "3000:3000"
    volumes:
      - ".:/app"
    expose:
      - "3000"
    depends_on:
      - redis
      - consumer
      - db
      - migrate
    
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    expose:
      - "6379"
    
  redis-commander:
    container_name: redis-commander-web
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    volumes:
      - ".:/app"
    expose:
      - "8081"
    
  consumer:
    container_name: consumer
    build: '.'
    command: go run ./events/consumer/main.go
    environment:
      REDIS_HOST: redis
      DB_HOST: postgres_db
    depends_on:
      - redis
      - db
    
  db:
    image: postgres:10.5
    container_name: postgres_db
    ports:
      - "5432:5432"
    expose:
      - "5432"
    tty: true
    environment:
      POSTGRES_USER: 'admin'
      POSTGRES_PASSWORD: 'admin'
      POSTGRES_DB: 'develop'
    
  migrate:
    container_name: migrate
    command: make reset-db
    build: .
    environment:
      REDIS_HOST: redis
      DB_HOST: postgres_db
    depends_on:
      - db